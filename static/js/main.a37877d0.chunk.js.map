{"version":3,"sources":["Components/Header/Navbar/Navbar.module.css","Components/Header/Navbar/DrawerNavbarClose/DrawerNavbarClose.module.css","Components/Header/DrawerNavbar/DrawerNavbar.module.css","Components/Header/Header.module.css","Components/Tuesday/Input/Input.module.css","Components/Tuesday/Button/Button.module.css","Components/Tuesday/Tuesday.module.css","Components/Monday/Input/Input.module.css","Components/Monday/Mondey.module.css","fonts/BloodLust-eXxm.ttf","Components/Tuesday/Text/Text.jsx","Components/Tuesday/Input/Input.jsx","Components/Tuesday/Button/Button.jsx","Components/Tuesday/Tuesday.jsx","Components/Monday/Button/Button.jsx","Components/Monday/Input/Input.jsx","Components/Monday/Text/Text.jsx","Components/Monday/Monday.jsx","Components/Header/Navbar/DrawerNavbarClose/DrawerNavbarClose.jsx","Components/Header/Navbar/Navbar.jsx","Components/Header/DrawerNavbar/DrawerNavbar.jsx","Components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","render","props","number","React","Component","Input","className","c","nameArea","style","ref","value","placeholder","type","onChange","onKeyPress","Button","buttonClick","onClick","onClickUp","Tuesday","newTextRef","createRef","state","names","name","title","event","currentTarget","setState","preNum","newTitle","current","alert","newText","newName","e","key","container","counter","Monday","DrawerNavbarClose","drawerNavbar","drawerNavbarButton","buttonDot","Navbar","navbar","item","to","activeClassName","activeItem","DrawerNavbar","Header","navbarOpen","drawerNavbarOnClick","backdropClickHandler","sideNavbar","header","headerTitle","secondHeaderTitle","App","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a37877d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__23tX8\",\"item\":\"Navbar_item__232md\",\"activeItem\":\"Navbar_activeItem__2ddlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerNavbar\":\"DrawerNavbarClose_drawerNavbar__3URlL\",\"drawerNavbarButton\":\"DrawerNavbarClose_drawerNavbarButton__16SlJ\",\"buttonDot\":\"DrawerNavbarClose_buttonDot__1RuD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawerNavbar\":\"DrawerNavbar_drawerNavbar__2MebS\",\"drawerNavbarButton\":\"DrawerNavbar_drawerNavbarButton__2y5of\",\"buttonDot\":\"DrawerNavbar_buttonDot__2uUO_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-l5q\",\"headerTitle\":\"Header_headerTitle__33SCK\",\"secondHeaderTitle\":\"Header_secondHeaderTitle__14Aze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameArea\":\"Input_nameArea__WWNtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonClick\":\"Button_buttonClick__cDZ0m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tuesday_container__J2dCo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Input_counter__3iy7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Mondey_container__1Ajvd\"};","module.exports = __webpack_public_path__ + \"static/media/BloodLust-eXxm.87a45c8f.ttf\";","import React from 'react';\r\n\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <span>{this.props.number} </span>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Text;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport c from './Input.module.css';\r\nclass Input extends React.Component {\r\n    \r\n\r\n    render = () => {\r\n        return (\r\n            <div className={c.nameArea}>\r\n                <input\r\n                    className={this.props.style}\r\n                    ref={this.props.value}\r\n                    placeholder='Your name...'\r\n                    type=\"text\"\r\n                    onChange={this.props.onChange}\r\n                    onKeyPress={this.props.onKeyPress}\r\n                 />\r\n            </div>)\r\n    }\r\n\r\n    };\r\n\r\n\r\nexport default Input;\r\n\r\n// handleKeyDown = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//         console.log('do validate');\r\n//     }\r\n// }\r\n\r\n// className = \"form-inside-Input\"\r\n// onSubmit = {this.onSubmit()}","import React from 'react';\r\nimport c from '../Button/Button.module.css';\r\n\r\nclass Button extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={c.buttonClick}>\r\n                <button onClick={this.props.onClickUp}>Click me!</button>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n","import React from 'react';\nimport Text from \"../Tuesday/Text/Text\";\nimport Input from \"./Input/Input\";\nimport Button from \"../Tuesday/Button/Button\";\nimport c from './Tuesday.module.css';\n\nclass Tuesday extends React.Component {\n\n\n    newTextRef = React.createRef();\n    state = {\n        number: 0,\n        names: [\n            {name: 'someName'}\n        ],\n        style: 'bordred',\n        title: ''\n    }\n\n\n    onChange = (event) => {\n        if (event.currentTarget.value === '') {\n            this.setState({style: 'bordred'})\n        } else {\n            this.setState({style: 'bord'})\n        }\n    }\n    onClickUp = () => {\n        this.setState((preNum) => {\n            return {\n                number: preNum.number + 1,\n            };\n        })\n        let newTitle = this.newTextRef.current.value;\n        alert('Hey, ' + this.newTextRef.current.value + '!');\n        this.newTextRef.current.value = '';\n        let newText = {\n            name: newTitle\n        };\n        let newName = [...this.state.names, newText];\n        this.setState({names: newName});\n    };\n\n    // handleChange(event) {\n    //     this.setState({value: event.target.value});\n    // }\n    onKeyPress = (e) => {\n        if(e.key === 'Enter'){\n            this.onClickUp()\n        }\n\n    }\n\n    render = () => {\n        return (\n            <div className={c.container}>\n\n                <Text number={this.state.number}/>\n                <Input\n                    value={this.newTextRef}\n                    style={this.state.style}\n                    onChange={this.onChange}\n                    onKeyPress={this.onKeyPress}\n                />\n                <Button onClickUp={this.onClickUp}/>\n\n            </div>\n        );\n    }\n}\n\nexport default Tuesday;\n\n// handleKeyDown = (e) => {\n//     if (e.key === 'Enter') {\n//         console.log('fvwefvef')\n//     }    // handleKeyPress = e => {\n//     //     if (e.key === \"Enter\") {\n//     //         const { onAccept } = this.newTextRef.current.value;\n//     //         onAccept && onAccept(e.target.value);\n//     //     }\n//     // }\n//let newTitle = this.newTextRef.current.value === '' ? this.state.style = this.state.style + 'red' : alert('Hey, ' + this.newTextRef.current.value + '!');\n//\n// changeStyle = (newStyleValue) => {\n//     this.setState({\n//         style: newStyleValue\n//     });\n// }\n// _onClickUp = (e) => {\n//     if (e.key === 'Enter') {\n//         this.onClickUp();\n//     }\n// };\n// let newStyle = this.state.style.map(s => {\n// if (this.newTextRef.current.value === ''){\n//     return this.style ==='bord';\n// }   return this.style;\n// })\n","import React from 'react';\r\n\r\n\r\nclass Button extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <button onClick={this.props.onClickUp}>Click me!</button>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Button;\r\n","\r\n\r\nimport React from 'react';\r\nimport c from './Input.module.css';\r\n\r\nclass Input extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <input className={c.counter} ref={this.props.value} type=\"text\"/>\r\n\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Input;\r\n\r\n\r\n// handleKeyDown = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//         console.log('do validate');\r\n//     }\r\n// }\r\n\r\n// className = \"form-inside-Input\"\r\n// onSubmit = {this.onSubmit()}","import React from 'react';\r\n\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div>\r\n                <span>{this.props.number} </span>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Text;\r\n\r\n\r\n","import React from 'react';\nimport Button from \"../Monday/Button/Button\";\nimport Input from \"../Monday/Input/Input\";\nimport Text from \"../Monday/Text/Text\";\nimport c from './Mondey.module.css';\n\n\n\nclass Monday extends React.Component {\n\n\n    newTextRef = React.createRef();\n    state = {\n        number: 0,\n        names: [\n            {name: 'someName'}\n        ],\n        style: 'bordred',\n        title: ''\n    }\n\n\n    onChange = (event) => {\n        if (event.currentTarget.value === '') {\n            this.setState({style: 'bordred'})\n        } else {\n            this.setState({style: 'bord'})\n        }\n    }\n    onClickUp = () => {\n        this.setState((preNum) => {\n            return {\n                number: preNum.number + 1,\n            };\n        })\n        let newTitle = this.newTextRef.current.value;\n        alert('Hey, ' + this.newTextRef.current.value + '!');\n        this.newTextRef.current.value = '';\n        let newText = {\n            name: newTitle\n        };\n        let newName = [...this.state.names, newText];\n        this.setState({names: newName});\n    };\n\n    // handleChange(event) {\n    //     this.setState({value: event.target.value});\n    // }\n    onKeyPress = (e) => {\n        if(e.key === 'Enter'){\n            this.onClickUp()\n        }\n\n    }\n\n    render = () => {\n        return (\n            <div className={c.container}>\n                <Text number={this.state.number}/>\n                <Input\n                    value={this.newTextRef}\n                    style={this.state.style}\n                    onChange={this.onChange}\n                    onKeyPress={this.onKeyPress}\n                />\n                <Button onClickUp={this.onClickUp}/>\n\n            </div>\n        );\n    }\n}\n\nexport default Monday;\n\n// handleKeyDown = (e) => {\n//     if (e.key === 'Enter') {\n//         console.log('fvwefvef')\n//     }    // handleKeyPress = e => {\n//     //     if (e.key === \"Enter\") {\n//     //         const { onAccept } = this.newTextRef.current.value;\n//     //         onAccept && onAccept(e.target.value);\n//     //     }\n//     // }\n//let newTitle = this.newTextRef.current.value === '' ? this.state.style = this.state.style + 'red' : alert('Hey, ' + this.newTextRef.current.value + '!');\n//\n// changeStyle = (newStyleValue) => {\n//     this.setState({\n//         style: newStyleValue\n//     });\n// }\n// _onClickUp = (e) => {\n//     if (e.key === 'Enter') {\n//         this.onClickUp();\n//     }\n// };\n// let newStyle = this.state.style.map(s => {\n// if (this.newTextRef.current.value === ''){\n//     return this.style ==='bord';\n// }   return this.style;\n// })\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport c from './DrawerNavbarClose.module.css';\n\nclass DrawerNavbarClose extends React.Component {\n\n    render = (props) => {\n        return (\n            <div className={c.drawerNavbar}>\n                <button onClick={this.props.onClick} className={c.drawerNavbarButton} >\n                    <div className={c.buttonDot}></div>\n                    <div className={c.buttonDot}></div>\n                    <div className={c.buttonDot}></div>\n                </button>\n\n            </div>\n        );\n    }\n}\n\nexport default DrawerNavbarClose;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport c from './Navbar.module.css';\nimport DrawerNavbarClose from \"./DrawerNavbarClose/DrawerNavbarClose\";\n\nclass Navbar extends React.Component {\n\n    render = () => {\n        return (\n            <div className={c.navbar}>\n                <div className={c.item}>\n                    <DrawerNavbarClose onClick={this.props.onClick}/>\n                    <NavLink to='/monday' activeClassName={c.activeItem}>Monday</NavLink>\n                </div>\n                <div className={c.item}>\n                    <NavLink to='/tuesday' activeClassName={c.activeItem}>Tuesday</NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport c from './DrawerNavbar.module.css';\n\nclass DrawerNavbar extends React.Component {\n\n    render = (props) => {\n        return (\n            <div className={c.drawerNavbar}>\n                <button onClick={this.props.onClick} className={c.drawerNavbarButton} >\n                    <div className={c.buttonDot}></div>\n                    <div className={c.buttonDot}></div>\n                    <div className={c.buttonDot}></div>\n                </button>\n\n            </div>\n        );\n    }\n}\n\nexport default DrawerNavbar;\n","import React from 'react';\nimport c from './Header.module.css';\nimport Navbar from \"./Navbar/Navbar\";\nimport DrawerNavbar from \"./DrawerNavbar/DrawerNavbar\";\n\nclass Header extends React.Component {\n    state = {\n        navbarOpen: false\n    };\n    drawerNavbarOnClick = () => {\n        this.setState({navbarOpen: true})\n    };\n    //         return {\n    //             navbarOpen: prevState.navbarOpen\n    //         };\n    //     });\n    // };\n\n    backdropClickHandler = () => {\n        this.setState({navbarOpen: false})\n    };\n\n    render = () => {\n        let sideNavbar;\n        if (this.state.navbarOpen) {\n            sideNavbar = <Navbar onClick={this.backdropClickHandler}/>;\n        }\n\n        return (\n            <div className={c.header}>\n                <DrawerNavbar onClick={this.drawerNavbarOnClick}/>\n                {sideNavbar}\n                <div className={c.headerTitle}>\n                    <span>Homework from Ignat</span>\n                    <span className={c.secondHeaderTitle}>only hardcore</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Tuesday from \"./Components/Tuesday/Tuesday\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Monday from \"./Components/Monday/Monday\";\nimport Navbar from \"./Components/Header/Navbar/Navbar\";\nimport Header from \"./Components/Header/Header\";\n\nclass App extends React.Component {\n\n\n    // newTextRef = React.createRef();\n    // state = {\n    //     number: 0,\n    //     names: [\n    //         {name: 'someName'}\n    //     ],\n    //     style: 'bordred',\n    //     title: ''\n    // }\n    //\n    //\n    // onChange = (event) => {\n    //     if (event.currentTarget.value === '') {\n    //         this.setState({style: 'bordred'})\n    //     } else {\n    //         this.setState({style: 'bord'})\n    //     }\n    // }\n    // onClickUp = () => {\n    //     this.setState((preNum) => {\n    //         return {\n    //             number: preNum.number + 1,\n    //         };\n    //     })\n    //     let newTitle = this.newTextRef.current.value;\n    //     alert('Hey, ' + this.newTextRef.current.value + '!');\n    //     this.newTextRef.current.value = '';\n    //     let newText = {\n    //         name: newTitle\n    //     };\n    //     let newName = [...this.state.names, newText];\n    //     this.setState({names: newName});\n    // };\n    //\n    // // handleChange(event) {\n    // //     this.setState({value: event.target.value});\n    // // }\n    // onKeyPress = (e) => {\n    //     if (e.key === 'Enter') {\n    //         this.onClickUp()\n    //     }\n    //\n    // }\n\n    render = () => {\n        return (\n\n            <HashRouter>\n            <div className=\"App\">\n                <Header/>\n                <Route path='/monday'\n                       render={() => <Monday/>}/>\n                <Route path='/tuesday'\n                       render={() => <Tuesday/>}/>\n\n\n                {/*<Text number={this.state.number}/>*/}\n                {/*<Input*/}\n                {/*    value={this.newTextRef}*/}\n                {/*    style={this.state.style}*/}\n                {/*    onChange={this.onChange}*/}\n                {/*    onKeyPress={this.onKeyPress}*/}\n                {/*/>*/}\n                {/*<Button onClickUp={this.onClickUp}/>*/}\n\n            </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\n// handleKeyDown = (e) => {\n//     if (e.key === 'Enter') {\n//         console.log('fvwefvef')\n//     }    // handleKeyPress = e => {\n//     //     if (e.key === \"Enter\") {\n//     //         const { onAccept } = this.newTextRef.current.value;\n//     //         onAccept && onAccept(e.target.value);\n//     //     }\n//     // }\n//let newTitle = this.newTextRef.current.value === '' ? this.state.style = this.state.style + 'red' : alert('Hey, ' + this.newTextRef.current.value + '!');\n//\n// changeStyle = (newStyleValue) => {\n//     this.setState({\n//         style: newStyleValue\n//     });\n// }\n// _onClickUp = (e) => {\n//     if (e.key === 'Enter') {\n//         this.onClickUp();\n//     }\n// };\n// let newStyle = this.state.style.map(s => {\n// if (this.newTextRef.current.value === ''){\n//     return this.style ==='bord';\n// }   return this.style;\n// })\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport './fonts/BloodLust-eXxm.ttf'\n\nReactDOM.render(\n<HashRouter>\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}