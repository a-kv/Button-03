{"version":3,"sources":["Components/Header/Navbar/Navbar.module.css","Components/Tuesday/Tuesday.module.css","Components/Header/Header.module.css","Components/Tuesday/Components/Header/Header.module.css","assets/150x150.gif","Components/Tuesday/Components/TodoListTasks/TodoListTask/TodoListTask.module.css","Components/Tuesday/Components/Footer/Footer.module.css","assets/image/menu.svg","assets/image/close.svg","Components/Monday/Button/Button.module.css","Components/Monday/Text/Text.module.css","Components/Monday/Mondey.module.css","Components/Tuesday/Components/TodoListTasks/Tasks.module.css","assets/image/001-cross.svg","assets/fonts/BloodLust-eXxm.ttf","Components/Header/Navbar/Navbar.jsx","Components/Header/Header.jsx","Components/Monday/Button/Button.jsx","Components/Monday/Text/Text.jsx","redux/mondayReducer.js","Components/Monday/Monday.jsx","Components/Tuesday/stateTodoList.js","Components/Tuesday/Components/TodoListTasks/TodoListTask/TodoListTask.jsx","Components/Tuesday/Components/TodoListTasks/TodoListTasks.jsx","Components/Tuesday/Components/Footer/Footer.jsx","Components/Tuesday/Components/Header/TodoListTitle.jsx","Components/Tuesday/Components/Header/AddNewItemForm.jsx","redux/tuesdayReducer.js","Components/Tuesday/TodoList.jsx","common/Preloader.jsx","Components/Tuesday/Tuesday.jsx","redux/wednesdayReducer.js","dal/api.js","Components/Wednesday/Wednesday.jsx","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Navbar","render","className","c","navbar","item","to","activeClassName","activeItem","React","Component","Header","state","navbarOpen","openNavbar","setState","closeNavbar","sideNavbar","navMenu","src","menu","onClick","header","headerTitle","cross","Button","buttonClick","props","Text","text","number","initialState","error","names","title","Monday","onChangeClick","onChangeNumber","newTitle","onChangeTitle","onChangeError","alert","newName","setName","onTitleChange","e","target","value","onKeyPress","key","errorClass","container","onChange","type","placeholder","MondayContainer","connect","mondayPage","dispatch","incCounterAC","onChangeErrorAC","onChangeTitleAC","setNameAC","saveState","stateAsString","JSON","stringify","localStorage","setItem","restoreStore","defaultState","getItem","parse","TodoListTask","isEditMode","activatedEditMode","deactivatedEditMode","onIsDoneChanged","changeStatus","task","id","currentTarget","checked","onTitleChanged","changeTitle","onPriorityChanged","changePriority","isDoneClasses","isDone","todoListTask","created","updated","finished","autoFocus","onBlur","priority","deleteTaskButton","deleteTask","TodoListTasks","tasksElements","tasks","map","t","del","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","buttons","TodoListTitle","todoListHeaderTitle","AddNewItemForm","onAddItemClick","trim","addItem","addItemForm","todolists","loading","TodoList","nextTaskId","saveStateOurState","restoreStoreOurState","newState","forEach","taskId","filter","changeTask","obj","updateTask","getDate","Date","toLocaleTimeString","hour","minute","addTask","newPriority","newTask","newFilterValue","filteredTasks","todoList","this","ConnectedTodolist","todolistId","addTaskAC","action","deleteTaskAC","updateTaskAC","Preloader","alt","Tuesday","tuesdayPage","nextTodoList","saveTodolists","restoreTodolists","addTodoList","newTodoListName","newTodolist","addTodolist","tl","counter","tuesday","setTimeout","changeLoading","TuesdayContainer","addTodoListAC","changeLoadingAC","CHANGE_THEME","POST_CHECK","TOGGLE_IS_FETCHING","CHANGE_NOTIFICATION","style","success","isFetching","notification","tryCatch","f","a","response","console","log","data","instance","axios","create","baseURL","api","post","then","res","Wednesday","onChangeTheme","changeTheme","onChangeChecked","changeCheck","toggleIsFetching","changeNotification","catch","dis","name","disabled","WednesdayContainer","wednesdayPage","changeThemeAC","postCheckAC","changeNotificationAC","App","path","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.70c1f351.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__23tX8\",\"item\":\"Navbar_item__232md\",\"activeItem\":\"Navbar_activeItem__2ddlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tuesday\":\"Tuesday_tuesday__24eFj\",\"counter\":\"Tuesday_counter__1hQN5\",\"loading\":\"Tuesday_loading__2F9R3\",\"todoList\":\"Tuesday_todoList__1LgT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2-l5q\",\"navMenu\":\"Header_navMenu__QQFsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Header_error__2ZLgj\",\"todoListHeaderTitle\":\"Header_todoListHeaderTitle__39673\",\"addItemForm\":\"Header_addItemForm__3EwUL\"};","module.exports = __webpack_public_path__ + \"static/media/150x150.1b4f96a6.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTask\":\"TodoListTask_todoListTask__35BZ5\",\"deleteTaskButton\":\"TodoListTask_deleteTaskButton__bpyPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__1xlk-\",\"buttons\":\"Footer_buttons__W4wgU\"};","module.exports = __webpack_public_path__ + \"static/media/menu.a450cc10.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.5d8fa210.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonClick\":\"Button_buttonClick__Fo--v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__2ty6-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Mondey_container__1Ajvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tasksElements\":\"Tasks_tasksElements__-WJMz\"};","module.exports = __webpack_public_path__ + \"static/media/001-cross.9dd23d2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/BloodLust-eXxm.87a45c8f.ttf\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport c from './Navbar.module.css';\nimport cross from \"../../../assets/image/001-cross.svg\";\n\nclass Navbar extends React.Component {\n\n    render = () => {\n        return (\n            <div className={c.navbar}>\n                <div className={c.item}>\n                    <NavLink to='/monday' activeClassName={c.activeItem}>Monday</NavLink>\n                </div>\n                <div className={c.item}>\n                    <NavLink to='/tuesday' activeClassName={c.activeItem}>Tuesday</NavLink>\n                </div>\n                <div className={c.item}>\n                    <NavLink to='/wednesday' activeClassName={c.activeItem}>Wednesday</NavLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport c from './Header.module.css';\nimport Navbar from \"./Navbar/Navbar\";\nimport menu from '../../assets/image/menu.svg';\nimport cross from '../../assets/image/close.svg';\n\nclass Header extends React.Component {\n    state = {\n        navbarOpen: false,\n    };\n    openNavbar = () => {\n        this.setState({navbarOpen: true})\n    };\n    closeNavbar = () => {\n        this.setState({navbarOpen: false})\n    };\n\n    render = () => {\n        let sideNavbar;\n        if (this.state.navbarOpen === true) {\n            sideNavbar = <Navbar/>;\n        }else{\n            return <img className={c.navMenu} src={menu} onClick={this.openNavbar}/>;\n        }\n\n        return (\n            <div className={c.header}>\n                <div className={c.headerTitle}>\n                    <img className={c.navMenu} src={cross} onClick={this.closeNavbar}/>\n                    {sideNavbar}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\r\nimport c from './Button.module.css';\r\n\r\nclass Button extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={c.buttonClick}>\r\n                <button onClick={this.props.onClick}>Click me!</button>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport c from './Text.module.css';\r\n\r\nclass Text extends React.Component {\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={c.text}>\r\n                <span>{this.props.number}</span>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default Text;\r\n\r\n\r\n\r\n","export const INC_COUNTER = 'INC_COUNTER';\r\nexport const ON_CHANGE_ERROR = 'ON_CHANGE_ERROR';\r\nexport const ON_CHANGE_TITLE = 'ON_CHANGE_TITLE';\r\nexport const SET_NAME = 'SET_NAME';\r\n\r\n\r\nconst initialState = {\r\n        number: 0,\r\n        error: true,\r\n        names: [],\r\n        title: ''\r\n    }\r\n\r\nexport const mondayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INC_COUNTER:\r\n            return {\r\n                ...state,\r\n                number: action.number,\r\n            }\r\n        case ON_CHANGE_ERROR: {\r\n            return {\r\n                    ...state,\r\n                    error: action.error,\r\n                }\r\n        }\r\n        case ON_CHANGE_TITLE: {\r\n            return {\r\n                    ...state,\r\n                title: action.title,\r\n                // error: action.error,\r\n                }\r\n        }\r\n        case SET_NAME: {\r\n            return {\r\n                    ...state,\r\n                names: action.names,\r\n                }\r\n        }\r\n    }\r\n    return state;\r\n}\r\nexport const incCounterAC = (number) => {\r\n    return {type: INC_COUNTER, number:number}\r\n}\r\nexport const onChangeErrorAC = (error) => {\r\n    return  {type: ON_CHANGE_ERROR, error: error};\r\n}\r\nexport const onChangeTitleAC = (title) => {\r\n    return  {type: ON_CHANGE_TITLE, title: title};\r\n}\r\nexport const setNameAC = (names) => {\r\n    return  {type: SET_NAME, names: names};\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport Button from \"../Monday/Button/Button\";\nimport Text from \"../Monday/Text/Text\";\nimport c from './Mondey.module.css';\nimport {incCounterAC, onChangeErrorAC, onChangeTitleAC, setNameAC} from \"../../redux/mondayReducer\";\nimport {connect} from \"react-redux\";\n\n\nclass Monday extends React.Component {\n\n    onChangeClick = () => {\n        // let counter = this.props.number + 1;\n        this.props.onChangeNumber(this.props.number + 1);\n        let newTitle = this.props.title;\n        this.props.onChangeTitle(''); //проверка на пустую строку\n        if (newTitle === \"\") {\n            this.props.onChangeError({error: true});\n            alert('error')\n        } else {\n            this.props.onChangeError({error: false});\n            let newName = [...this.props.names, newTitle];\n            this.props.setName({names: newName})\n            alert('Hey, ' + newTitle + '!');\n            this.props.onChangeTitle('');\n        }\n\n    };\n    onTitleChange = (e) => {\n        this.props.onChangeTitle(e.target.value);\n    };\n    onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            return this.onChangeClick()\n        }\n    }\n\n    render = () => {\n        let errorClass = this.props.error ? 'error' : '';\n        return (\n            <div className={c.container}>\n                <Text number={this.props.number}/>\n                <input\n                    onChange={this.onTitleChange}\n                    className={errorClass}\n                    type=\"text\"\n                    placeholder=\"New-item-name\"\n                    onKeyPress={this.onKeyPress}\n                    value={this.props.title}\n                />\n                <Button onClick={this.onChangeClick}/>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        number: state.mondayPage.number,\n        error: state.mondayPage.error,\n        names: state.mondayPage.names,\n        title: state.mondayPage.title\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onChangeNumber: (number) => {\n            dispatch(incCounterAC(number))\n        },\n        onChangeError: (error) => {\n            dispatch(onChangeErrorAC(error))\n        },\n        onChangeTitle: (title) => {\n            dispatch(onChangeTitleAC(title))\n        },\n        setName: (names) => {\n            dispatch(setNameAC(names))\n        }\n    }\n\n}\nconst MondayContainer = connect(mapStateToProps, mapDispatchToProps)(Monday);\nexport default MondayContainer;\n\n","export const saveState = (key, state) => {\r\n    let stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\nexport const restoreStore = (key, defaultState) => {\r\n\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n        defaultState = JSON.parse(stateAsString);\r\n    }\r\n    return defaultState;\r\n}\r\n\r\n","import React from 'react';\r\nimport c from './TodoListTask.module.css';\r\n\r\n\r\nclass TodoListTask extends React.Component {\r\n    state = {\r\n        isEditMode: false,\r\n\r\n    }\r\n\r\n    activatedEditMode = () => {\r\n        this.setState({isEditMode: true})\r\n    };\r\n    deactivatedEditMode = () => {\r\n        this.setState({isEditMode: false})\r\n    };\r\n    onIsDoneChanged = (e) => {\r\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked);\r\n    };\r\n    onTitleChanged = (e) => {\r\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n    }\r\n    onPriorityChanged = (e) => {\r\n        this.props.changePriority(this.props.task.id, e.currentTarget.value)\r\n    }\r\n\r\n\r\n    render = () => {\r\n        let isDoneClasses = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\r\n        return (\r\n            <div className={c.todoListTask} title={`created: ${this.props.task.created}, updated: ${this.props.task.updated}, finished: ${this.props.task.finished}`}>\r\n\r\n                <div className={isDoneClasses}>\r\n                    <input type=\"checkbox\"\r\n                           checked={this.props.task.isDone}\r\n                           onChange={this.onIsDoneChanged}\r\n                    />\r\n                    {this.state.isEditMode\r\n                        ? <input onChange={this.onTitleChanged}\r\n                                 value={this.props.task.title}\r\n                                 autoFocus={true}\r\n                                 onBlur={this.deactivatedEditMode}/>\r\n                        : <span onClick={this.activatedEditMode}>{this.props.task.id} : {this.props.task.title} </span>\r\n                    }\r\n                    <span>\r\n                        <select onChange={this.onPriorityChanged}>\r\n                            <option>low</option>\r\n                            <option>med</option>\r\n                            <option>high</option>\r\n                </select> {this.props.task.priority} </span>\r\n                    <button className={c.deleteTaskButton}\r\n                            onClick={() => this.props.deleteTask(this.props.id)}\r\n                    >X\r\n                    </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\nexport default TodoListTask;\r\n\r\n","import React from 'react';\r\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\r\nimport c from './Tasks.module.css';\r\n\r\n\r\nclass TodoListTasks extends React.Component {\r\n\r\n    render = () => {\r\n           let myFn = (t) =>{\r\n            return  <TodoListTask\r\n                    id={t.id}\r\n                    task={t}\r\n                    del={this.props.del}\r\n                    changeStatus={this.props.changeStatus}\r\n                    changeTitle={this.props.changeTitle}\r\n                    deleteTask={this.props.deleteTask}\r\n                    changePriority={this.props.changePriority}\r\n                    priority={this.props.priority}\r\n                    created={this.props.created}\r\n                    updated={this.props.updated}\r\n                    finished={this.props.finished}\r\n            />\r\n           }\r\n                let tasksElements = this.props.tasks.map(myFn);\r\n\r\n\r\n        return (\r\n            <div className={c.tasksElements}>\r\n                {tasksElements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;\r\n\r\n","import React from 'react';\r\nimport c from './Footer.module.css';\r\n\r\nclass TodoListFooter extends React.Component {\r\n\r\n\r\n    state = {\r\n        isHidden: false\r\n    }\r\n\r\n    onAllFilterClick = () => {this.props.changeFilter('All')}\r\n    onCompletedFilterClick = () => {this.props.changeFilter('Completed')}\r\n    onActiveFilterClick = () => { this.props.changeFilter('Active')}\r\n    onShowFiltersClick = () => { this.setState({isHidden: false})}\r\n    onHideFiltersClick = () => { this.setState({isHidden: true})}\r\n\r\n\r\n    render = (props) => {\r\n\r\n        let classForAll = this.props.filterValue === \"All\" ? \"filter-active\" : \"\";\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? \"filter-active\" : \"\";\r\n        let classForActive = this.props.filterValue === \"Active\" ? \"filter-active\" : \"\";\r\n\r\n        return (\r\n\r\n            <div className={c.container}>\r\n\r\n                {!this.state.isHidden && <div className={c.buttons}>\r\n                    <button\r\n                        className={classForAll}\r\n                        onClick={this.onAllFilterClick}\r\n                    >All\r\n                    </button>\r\n                    <button\r\n                        className={classForCompleted}\r\n                        onClick={this.onCompletedFilterClick}\r\n                    >Completed\r\n                    </button>\r\n                    <button\r\n                        className={classForActive}\r\n                        onClick={this.onActiveFilterClick}\r\n                    >Active\r\n                    </button>\r\n\r\n                </div>\r\n                }\r\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>hide</span>}\r\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>show</span>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default TodoListFooter;","import React from 'react';\r\nimport c from './Header.module.css';\r\n\r\nclass TodoListTitle extends React.Component {\r\n\r\n\r\n    render = (props) => {\r\n\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                <h3 className={c.todoListHeaderTitle}>\r\n                    {this.props.title}\r\n                    {/*What to Learn*/}\r\n                </h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    export default TodoListTitle;\r\n","import React from 'react';\r\nimport c from './Header.module.css';\r\nclass AddNewItemForm extends React.Component {\r\n    state={\r\n        error: true,\r\n        title: ''\r\n    }\r\n    onAddItemClick = () => {\r\n        let newTitle = this.state.title.trim();\r\n        this.state.title = \"\"; //проверка на пустую строку\r\n        if (newTitle === \"\") {\r\n            this.setState({error: true});\r\n        }else{\r\n            this.setState( {error: false});\r\n            this.props.addItem(newTitle);\r\n        }\r\n    };\r\n    onTitleChange = (e) => {\r\n           this.setState({\r\n               error: false,\r\n               title: e.currentTarget.value\r\n           });\r\n        };\r\n    onKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            return this.onAddItemClick()\r\n        }\r\n\r\n    }\r\n\r\n    render = (props) => {\r\n        let errorClass = this.state.error ? 'error': '';\r\n        return (\r\n            <div className=\"todoList-header\">\r\n                <div className={c.addItemForm}>\r\n                    <input\r\n                        onChange={this.onTitleChange}\r\n                        className={errorClass}\r\n                        type=\"text\"\r\n                        placeholder=\"New-item-name\"\r\n                        onKeyPress={this.onKeyPress}\r\n                        value={this.state.title}\r\n                    />\r\n                    <button onClick={this.onAddItemClick}>Add</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n    export default AddNewItemForm;\r\n","export const ADD_TODOLIST = 'ADD_TODOLIST';\r\nexport const DELETE_TODOLIST = 'DELETE_TODOLIST';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const CHANGE_LOADING = 'CHANGE_LOADING';\r\n\r\n\r\nconst initialState = {\r\n    todolists: [],\r\n    loading: true,\r\n}\r\n\r\nexport const tuesdayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODOLIST:\r\n            return {...state,\r\n                todolists: [...state.todolists, action.newTodolist]}\r\n        case DELETE_TODOLIST:\r\n            return {\r\n                ...state, todolists: state.todolists.filter(tl => tl.id !== action.todolistId)\r\n            }\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id !== action.todolistId) {\r\n                        return tl\r\n                    } else {\r\n                        return {...tl, tasks: [...tl.tasks, action.newTask]}\r\n                    }\r\n                })\r\n            }\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t => {\r\n                                if (t.id != action.taskId) {\r\n                                    return t;\r\n                                } else {\r\n                                    return {...t, ...action.obj};\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            }\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl => {\r\n                    if (tl.id === action.todolistId) {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t => t.id !== action.taskId)\r\n                        }\r\n                    } else {\r\n                        return tl\r\n                    }\r\n                })\r\n            }\r\n        case CHANGE_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport const updateTaskAC = (taskId, obj, todolistId) => {\r\n    return {type: UPDATE_TASK, taskId, obj, todolistId};\r\n}\r\nexport const addTodoListAC = (newTodolist) => {\r\n    return {type: ADD_TODOLIST, newTodolist};\r\n}\r\n\r\nexport const deleteTaskAC = (taskId, todolistId) => {\r\n    return {type: DELETE_TASK, taskId, todolistId};\r\n}\r\n\r\nexport const addTaskAC = (newTask, todolistId) => {\r\n    return {type: ADD_TASK, newTask, todolistId};\r\n}\r\n\r\nexport const changeLoadingAC = (loading) => {\r\n    return {type: CHANGE_LOADING, loading: loading}\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport c from './Tuesday.module.css';\r\nimport TodoListTasks from \"./Components/TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"./Components/Footer/Footer\";\r\nimport TodoListTitle from \"./Components/Header/TodoListTitle\";\r\nimport AddNewItemForm from \"./Components/Header/AddNewItemForm\";\r\nimport {restoreStore, saveState} from \"./stateTodoList\";\r\nimport {addTaskAC, deleteTaskAC, updateTaskAC} from \"../../redux/tuesdayReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass TodoList extends React.Component {\r\n\r\n    nextTaskId = 0;\r\n\r\n    state = {\r\n        tasks: [ ],\r\n    filterValue: 'All',\r\n    };\r\n\r\n    saveStateOurState = () => {\r\n        saveState('our-state-' + this.props.id, this.props)\r\n    }\r\n    restoreStoreOurState = () => {\r\n        let newState = restoreStore('our-state-' + this.props.id)\r\n        this.setState(newState, () => {\r\n            this.props.tasks.forEach(t => {\r\n                if (t.id >= this.nextTaskId) {\r\n                    this.nextTaskId = t.id + 1\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.restoreStoreOurState(); // удобно запускать сет таймауты и тд\r\n    }\r\n\r\n    deleteTask = (taskId) => {\r\n        this.setState({tasks: this.props.tasks.filter(t => t.id !== taskId)},\r\n            this.saveStateOurState);\r\n    };\r\n    changeTask = (taskId, obj) => {\r\n        let newTasks = this.props.tasks.map(t => {\r\n            if (t.id === taskId) {\r\n                return {...t, ...obj};\r\n            }\r\n            return t;\r\n\r\n        });\r\n        this.props.updateTask(taskId, obj, this.props.id);\r\n    }\r\n    getDate = () => {\r\n        return new Date().toLocaleTimeString('ru-RU', {hour: '2-digit', minute: '2-digit'}) + ''\r\n    }\r\n\r\n    changeStatus = (taskId, isDone) => {\r\n        this.changeTask(taskId, {\r\n            isDone: isDone,\r\n            updated: this.getDate(),\r\n            finished: isDone ? this.getDate() : null\r\n        })\r\n    }\r\n\r\n    changeTitle = (taskId, title) => {\r\n        this.changeTask(taskId, {\r\n            title: title,\r\n            updated: this.getDate()\r\n        })\r\n\r\n    }\r\n    changePriority = (taskId, priority) => {\r\n        this.changeTask(taskId, {\r\n            priority: priority,\r\n            updated: this.getDate()\r\n        })\r\n    }\r\n\r\n    addTask = (newTitle, newPriority) => {\r\n        let newTask = {\r\n            id: this.nextTaskId,\r\n            title: newTitle,\r\n            isDone: false,\r\n            priority: newPriority,\r\n            created: this.getDate(),\r\n            updated: null,\r\n            finished: null\r\n        };\r\n        this.nextTaskId++;\r\n        // let newTasks = [...this.props.tasks, newTask];\r\n        this.props.addTask(newTask, this.props.id);\r\n    };\r\n\r\n    changeFilter = (newFilterValue) => {\r\n        this.setState({\r\n            filterValue: newFilterValue\r\n        });\r\n    }\r\n    render = () => {\r\n\r\n        let filteredTasks = this.props.tasks.filter(t => {\r\n            switch (this.filterValue) {\r\n                case 'Active':\r\n                    return !t.isDone;\r\n                case 'Completed':\r\n                    return t.isDone;\r\n                default:\r\n                    return true;\r\n            }\r\n        })\r\n\r\n        return (\r\n\r\n            <div className={c.todoList}>\r\n                <TodoListTitle title={this.props.title}/>\r\n                <AddNewItemForm addItem={this.addTask}/>\r\n                <TodoListTasks id={this.props.tasks.id}\r\n                               priority={this.props.priority}\r\n                               created={this.props.created}\r\n                               updated={this.props.updated}\r\n                               finished={this.props.finished}\r\n                               tasks={filteredTasks}\r\n                               deleteTask={this.deleteTask}\r\n                               changeTitle={this.changeTitle}\r\n                               changeStatus={this.changeStatus}\r\n                               changePriority={this.changePriority}\r\n                />\r\n                <TodoListFooter filterValue={this.filterValue}\r\n                                changeFilter={this.changeFilter}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTask(newTask, todolistId) {\r\n            dispatch(addTaskAC(newTask, todolistId));\r\n        },\r\n        deleteTask: (taskId, obj, todolistId) => {\r\n            const action = deleteTaskAC(taskId, todolistId);\r\n            dispatch(action)\r\n        },\r\n        updateTask(taskId, obj,todolistId) {\r\n            dispatch(updateTaskAC(taskId, obj,todolistId));\r\n        }\r\n    }\r\n}\r\n\r\nconst ConnectedTodolist = connect(null, mapDispatchToProps)(TodoList);\r\n\r\nexport default ConnectedTodolist;\r\n","import React from 'react';\r\nimport c from '../Components/Tuesday/Tuesday.module.css';\r\nimport loading from \"../assets/150x150.gif\";\r\n\r\n\r\nclass Preloader extends React.Component {\r\n    render = () => {\r\n        return <img className={c.loading} src={loading} alt=\"\"/>;\r\n    }\r\n}\r\nexport default Preloader;\r\n","import React from 'react';\nimport {restoreStore, saveState} from \"./stateTodoList\";\nimport c from './Tuesday.module.css';\nimport ConnectedTodolist from \"./TodoList\";\nimport AddNewItemForm from \"./Components/Header/AddNewItemForm\";\nimport loading from '../../assets/150x150.gif';\nimport {addTodoListAC, changeLoadingAC} from \"../../redux/tuesdayReducer\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"../../common/Preloader\";\n\n\nclass Tuesday extends React.Component {\n    state = this.props.tuesdayPage;\n    nextTodoList = 0\n\n    saveTodolists = () => {\n        saveState('todolists', this.state)\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.props.changeLoading(false)\n        }, 1000)\n        this.restoreTodolists();\n    }\n\n    restoreTodolists = () => {\n        let newState = restoreStore('todolists', this.state)\n        this.setState(newState, () => {\n            this.props.todolists.forEach(t => {\n                if (t.id >= this.nextTodoList) {\n                    this.nextTodoList = t.id + 1\n                }\n            })\n        });\n    }\n\n\n\n    addTodoList = (newTodoListName) => {\n        let newTodolist = {\n            id: this.nextTodoList,\n            title: newTodoListName,\n            tasks: []\n        };\n        this.nextTodoList++;\n        this.props.addTodolist(newTodolist);\n        this.setState({\n            todolists: newTodolist\n        }, this.saveState)\n    };\n\n    render = () => {\n        if (this.props.loading === true) {\n            return <Preloader/>;\n        } else {\n            let todolists = this.props.todolists.map(tl => {\n                return <ConnectedTodolist key={tl.id} id={tl.id} title={tl.title} tasks={tl.tasks}/>\n            });\n\n            return (\n                <div className={c.counter}>\n                    <AddNewItemForm addItem={this.addTodoList}/>\n                    <div className={c.tuesday}>\n                        {todolists}\n                    </div>\n                </div>\n\n            );\n        };\n    };\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.tuesdayPage.todolists,\n        loading: state.tuesdayPage.loading\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n        addTodolist: (newTodolist) => {\n            dispatch(addTodoListAC(newTodolist));\n        },\n        changeLoading: (loading) => {\n            dispatch(changeLoadingAC(loading));\n        }\n    }\n}\nconst TuesdayContainer = connect(mapStateToProps, mapDispatchToProps)(Tuesday);\nexport default TuesdayContainer;\n\n","export const CHANGE_THEME = './redux/wednesdayReducer/CHANGE_THEME';\r\nexport const POST_CHECK = './redux/wednesdayReducer/POST_CHECK';\r\nexport const TOGGLE_IS_FETCHING = './redux/wednesdayReducer/TOGGLE_IS_FETCHING';\r\nexport const CHANGE_NOTIFICATION = './redux/wednesdayReducer/CHANGE_NOTIFICATION';\r\n\r\n\r\nconst initialState = {\r\n    style: \"blue\",\r\n    success: true,\r\n    isFetching: false,\r\n    notification: 'Send request to server'\r\n    }\r\n\r\nexport const wednesdayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_THEME:\r\n            return {\r\n                ...state,\r\n                style: action.style\r\n            }\r\n        case POST_CHECK:\r\n            return {\r\n                ...state,\r\n                success: action.success\r\n            }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case CHANGE_NOTIFICATION: {\r\n            debugger\r\n            return {...state, notification: action.notification}\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\n\r\nexport const changeThemeAC = (style) => ({type: CHANGE_THEME, style});\r\nexport const postCheckAC = (success) => ({type: POST_CHECK, success});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const changeNotificationAC = (notification) => {\r\n    debugger\r\n    return {type: CHANGE_NOTIFICATION, notification}\r\n};\r\n\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\n\r\nexport const tryCatch = async (f) => {\r\n    try {\r\n        const response = await f();\r\n        console.log('answer: ', response.data);\r\n        return response;\r\n    } catch (e) {\r\n        console.log('error: ', {...e});\r\n        return 'error';\r\n    }\r\n    ;\r\n}\r\n\r\nconst instance = axios.create(\r\n    {baseURL: 'https://neko-cafe-back.herokuapp.com/auth/'}\r\n)\r\nexport const api = {\r\n    fun(success) {\r\n        return instance.post( 'test', {success: success})\r\n            .then(res => (res)\r\n            )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport c from './Wednesday.css';\nimport {connect} from \"react-redux\";\nimport {changeNotificationAC, changeThemeAC, postCheckAC, toggleIsFetching} from \"../../redux/wednesdayReducer\";\nimport {api, tryCatch} from \"../../dal/api\";\nimport Preloader from \"../../common/Preloader\";\n\n\nclass Wednesday extends React.Component {\n\n    onChangeTheme = (e) => {\n        return this.props.changeTheme(e.target.value);\n    }\n    onChangeChecked = () => {\n        return this.props.changeCheck(!this.props.success);\n    }\n\n    f = () => {\n        this.props.toggleIsFetching(true);\n        api.fun(this.props.success)\n            .then(res => {\n                console.log(res)\n                debugger\n                this.props.toggleIsFetching(false);\n                this.props.changeNotification('ok');\n\n            })\n            .catch(e => {\n                debugger\n                this.props.changeNotification('error');\n                console.log(e)\n            });\n    }\n\n    render() {\n\n        let dis = this.props.isFetching ? 'disabled' : '';\n        return (<>\n                {this.props.isFetching ? <Preloader/> : null}\n\n                <div className={this.props.style}>\n                    <div>DARK<input\n                        onClick={this.onChangeTheme}\n                        type=\"radio\"\n                        value=\"dark\"\n                        name=\"theme\"\n                    /></div>\n                    <div>LIGHT<input\n                        onClick={this.onChangeTheme}\n                        type=\"radio\"\n                        value=\"light\"\n                        name=\"theme\"\n                    /></div>\n                    <div>BLUE<input\n                        onClick={this.onChangeTheme}\n                        type=\"radio\"\n                        value=\"blue\"\n                        name=\"theme\"\n                    /></div>\n                    <div>\n                        <button onClick={() => tryCatch(this.f)} disabled={dis}>SEND</button>\n                        <input onClick={this.onChangeChecked}\n                               checked={this.props.success}\n                               type=\"radio\"\n                        /></div>\n                    <span>{this.props.notification}</span>\n                </div>\n            </>\n        )\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        style: state.wednesdayPage.style,\n        success: state.wednesdayPage.success,\n        isFetching: state.wednesdayPage.isFetching,\n        notification: state.wednesdayPage.notification,\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeTheme: (style) => {\n            dispatch(changeThemeAC(style));\n        },\n        changeCheck: (success) => {\n            dispatch(postCheckAC(success));\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetching(isFetching));\n        },\n        changeNotification: (notification) => {\n            debugger\n            dispatch(changeNotificationAC(notification));\n        },\n\n    }\n}\nconst WednesdayContainer = connect(mapStateToProps, mapDispatchToProps)(Wednesday);\nexport default WednesdayContainer;\n\n\n","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Header from \"./Components/Header/Header\";\nimport MondayContainer from \"./Components/Monday/Monday\";\nimport TuesdayContainer from \"./Components/Tuesday/Tuesday\";\nimport Wednesday from \"./Components/Wednesday/Wednesday\";\n\nclass App extends React.Component {\n\n    render = () => {\n        return (\n\n            <HashRouter>\n                <div className=\"App\">\n                    <Header/>\n                    <Route path='/monday'\n                           render={() => <MondayContainer/>}/>\n                    <Route path='/tuesday'\n                           render={() => <TuesdayContainer/>}/>\n                    <Route path='/wednesday'\n                           render={() => <Wednesday/>}/>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {mondayReducer} from \"./redux/mondayReducer\";\r\nimport {tuesdayReducer} from \"./redux/tuesdayReducer\";\r\nimport {wednesdayReducer} from \"./redux/wednesdayReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    mondayPage: mondayReducer,\r\n    tuesdayPage: tuesdayReducer,\r\n    wednesdayPage: wednesdayReducer,\r\n\r\n\r\n})\r\nlet store = createStore(reducers)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport './assets/fonts/BloodLust-eXxm.ttf'\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n<HashRouter>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n</HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}